#include<iostream>
#include<conio.h>
#include<Windows.h>
#include<time.h>

#define BOARDSIZE_2013182010 19
#define WHITE_2013182010 1 // 홀수 턴
#define BLACK_2013182010 2 // 짝수 턴 --> 0턴부터 시작하니 흑이 선공을 시작한다.

#define RISK_CAN_DANGER_2013182010 100
#define RISK_HAZARD_2013182010 10000
#define RISK_WIN_2013182010 1000000
#define RISK_SAFE_2013182010 -1
#define RISK_TABOO_2013182010 -1

typedef struct {
	int first_ct; //0000X <-- 방향 5번
	int secnd_ct; //000X0 <-- 방향 4번 , -->방향 1번
	int third_ct; //00X00 <-- 방향 3번 , -->방향 2번
	int forth_ct; //0X000 <-- 방향 2번 , -->방향 3번
	int fifth_ct; //X0000 --> 방향 5번
	int mx_ct; // 그 칸의 최대 돌갯수?

	bool firstclose; // 처음이 닫혀있냐?
	bool lastclose; // 끝이 닫혀있냐?

	bool istaboo; // 금수자리인가?
}C_State;


typedef enum {
	up, down, right, left
}Move;
typedef enum {
	attack_2013182010, defense_2013182010
}Better_State_2013182010;
////////////<변수들 총집합>///////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////
int board_2013182010[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0 };
///////////<이것이 전쟁판이다>///////////////////////

/////////////////////////////////////////////////////////////////
int white_attk_board_2013182010[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0}; // 돌을 놓았을 경우 공격지수
int white_deff_board_2013182010[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0}; // 돌을 놓았을 경우 방어지수
													 ///////////<흰돌의 리스크 보드>///////////////////////

													 /////////////////////////////////////////////////////////////////
int black_attk_board_2013182010[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0 }; // 돌을 놓았을 경우 공격지수
int black_deff_board_2013182010[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0 }; // 돌을 놓았을 경우 방어지수
													 ///////////<검은돌의 리스크 보드>///////////////////////


													 ////////////<방향별 리스크를 체크한다>//////////////////////////////////////////////////////////////////////
													 ////////////////////////////////////////////////////////////////////////////////////////////////////////
C_State w_st_chek_garo[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // 가로방향
C_State w_st_chek_sero[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // 세로방향
C_State w_st_chek_de_l[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // ↘방향
C_State w_st_chek_de_r[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // ↙방향
																				  ////////////////////////////////////////////////////////////////////////////////////////////////////////

																				  ////////////////////////////////////////////////////////////////////////////////////////////////////////
C_State b_st_chek_garo[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // 가로방향
C_State b_st_chek_sero[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // 세로방향
C_State b_st_chek_de_l[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // ↘방향
C_State b_st_chek_de_r[BOARDSIZE_2013182010][BOARDSIZE_2013182010] = { 0,0,0,0,0,0,false,false,false }; // ↙방향
																				  ////////////////////////////////////////////////////////////////////////////////////////////////////////
																				  ////////////////////////////////////////////////////////////////////////////////////////////////////////
int turn_2013182010 = 0; //현재 턴 --> 짝수턴이 흑돌, 홀수턴이 백돌

int better_phase_2013182010 = Better_State_2013182010::attack_2013182010; // 현재 태세

int max_deff_2013182010 = 0; // 리스크 보드중 가장 높은 값의 방어지수
int max_attk_2013182010 = 0; // 리스크 보드중 가장 높은 값의 공격지수

int posx_2013182010;
int posy_2013182010;

void ATTKWITE_2013182010김병진(int *x, int *y);
void DEFFWITE_2013182010김병진(int x, int y);
void ATTKBLAK_2013182010김병진(int *x, int *y);
void DEFFBLAK_2013182010김병진(int x, int y);



////////////////////////////////////////////////////////////////////////////////////////////////////
void insert(int);
void print();

void board_2013182010_calc(int);




void insert(int st_color) {

	//if (turn_2013182010 % 2 == autoplay && turn_2013182010 < BOARDSIZE_2013182010*BOARDSIZE_2013182010)
	{
		srand((unsigned)time(NULL));
		int x = rand() % BOARDSIZE_2013182010;
		int y = rand() % BOARDSIZE_2013182010;
		bool isset = false;

		while (!isset) {

			x = rand() % BOARDSIZE_2013182010;
			y = rand() % BOARDSIZE_2013182010;

			if (board_2013182010[y][x] == 0) {
				switch (st_color) {
				case BLACK_2013182010:
				{
					switch (better_phase_2013182010) {
					case Better_State_2013182010::attack_2013182010:
					{
						if (black_attk_board_2013182010[y][x] == max_attk_2013182010) isset = true;
					}
					break;
					case Better_State_2013182010::defense_2013182010:
					{
						if (black_deff_board_2013182010[y][x] == max_deff_2013182010) isset = true;
					}
					break;
					}
				}
				break;
				case WHITE_2013182010:
				{
					switch (better_phase_2013182010) {
					case Better_State_2013182010::attack_2013182010:
					{
						if (white_attk_board_2013182010[y][x] == max_attk_2013182010)isset = true;
					}
					break;
					case Better_State_2013182010::defense_2013182010:
					{
						if (white_deff_board_2013182010[y][x] == max_deff_2013182010)isset = true;
					}
					break;
					}
				}
				break;
				}
			}



		}
		

		if (st_color == BLACK_2013182010) {
			board_2013182010[y][x] = BLACK_2013182010;
		}
		else {
			board_2013182010[y][x] = WHITE_2013182010;
		}
		posx_2013182010 = x;
		posy_2013182010 = y;

	}
	//else 
	/*
	{
	if (board_2013182010[caretpos.y][caretpos.x] == 0) {
	board_2013182010[caretpos.y][caretpos.x] = turn_2013182010 % 2 + 2;

	turn_2013182010++;

	}


	}
	*/



}


void board_2013182010_calc(int st_color) {

	better_phase_2013182010 = Better_State_2013182010::attack_2013182010;
	max_attk_2013182010 = 0;
	max_deff_2013182010 = 0;
	/* ------------초기화한다 --------------------------------*/
	for (int i = 0; i < BOARDSIZE_2013182010; ++i) {
		for (int j = 0; j < BOARDSIZE_2013182010; ++j) {
			white_attk_board_2013182010[i][j] = 0;
			white_deff_board_2013182010[i][j] = 0;

			black_attk_board_2013182010[i][j] = 0;
			black_deff_board_2013182010[i][j] = 0;

			w_st_chek_garo[i][j] = { 0,0,0,0,0,0,false,false,false };
			w_st_chek_sero[i][j] = { 0,0,0,0,0,0,false,false,false };
			w_st_chek_de_l[i][j] = { 0,0,0,0,0,0,false,false,false }; // ↘
			w_st_chek_de_r[i][j] = { 0,0,0,0,0,0,false,false,false }; // ↙

			b_st_chek_garo[i][j] = { 0,0,0,0,0,0,false,false,false };
			b_st_chek_sero[i][j] = { 0,0,0,0,0,0,false,false,false };
			b_st_chek_de_l[i][j] = { 0,0,0,0,0,0,false,false,false }; // ↘
			b_st_chek_de_r[i][j] = { 0,0,0,0,0,0,false,false,false }; // ↙
		}
	}
	/* ------------초기화한다 --------------------------------*/

	/*---------------<각 돌에 대한 갯수 체크>------------------------------------------------------------------------------------------------*/
	for (int i = 0; i < BOARDSIZE_2013182010; ++i)
	{
		for (int j = 0; j < BOARDSIZE_2013182010; ++j)
		{
			///////////////////////본격적인 리스크보드 체크를 시작하여보자////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////////////////////
			//< 만약 이미 돌이 놓인곳이라면 바로 빠져나간다. 체크는 하지 않는다. 야스야스야스 >////////////

			/////////////////////////////////<검정돌 쳌크>/////////////////////////////////////////////////////////////////////////////////////////////////
			{
				//////////////////////////<가로 쳌크>////////////////////////////////////////////////////////////////////////
				{
					/*-------------------------------------------------------------------------------------------------------*/
					/////////////////////////////////////////////////////////////////////////
					{
						bool iscloze = true;

						for (int count = 0; (count < 5) && (j - count != -1); ++count) {
							if (count == 4) iscloze = false;
							if (count == 0)
							{
								b_st_chek_garo[i][j].first_ct++; // 컴은돌 카운터++
							} // 카운트카 0이라면 
							else
							{
								if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].first_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									b_st_chek_garo[i][j].firstclose = true;
									break;
								}
							}
						}

						if (iscloze) b_st_chek_garo[i][j].firstclose = true;


					}
					//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
					/*-------------------------------------------------------------------------------------------------------*/
					/////////////////////////////////////////////////////////////////////////
					{
						for (int count = 0; (count < 4) && (j - count != -1); ++count) {
							if (count == 0)
							{
								b_st_chek_garo[i][j].secnd_ct++; // 컴은돌 카운터++
							} // 카운트카 0이라면 
							else
							{
								if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].secnd_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									break;
								}
							}
						}
						for (int count = 1; (count <= 1) && (j + count != BOARDSIZE_2013182010); ++count) {
							{
								if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].secnd_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									break;
								}
							}
						}
					}
					//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
					/*-------------------------------------------------------------------------------------------------------*/
					/////////////////////////////////////////////////////////////////////////
					{
						for (int count = 0; (count < 3) && (j - count != -1); ++count) {
							if (count == 0)
							{
								b_st_chek_garo[i][j].third_ct++; // 컴은돌 카운터++
							} // 카운트카 0이라면 
							else
							{
								if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].third_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									break;
								}
							}
						}
						for (int count = 1; (count <= 2) && (j + count != BOARDSIZE_2013182010); ++count) {
							{
								if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].third_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									break;
								}
							}
						}
					}
					//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
					/*-------------------------------------------------------------------------------------------------------*/
					/////////////////////////////////////////////////////////////////////////
					{
						for (int count = 0; (count < 2) && (j - count != -1); ++count) {
							if (count == 0)
							{
								b_st_chek_garo[i][j].forth_ct++; // 컴은돌 카운터++
							} // 카운트카 0이라면 
							else
							{
								if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].forth_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									break;
								}
							}
						}
						for (int count = 1; (count <= 3) && (j + count != BOARDSIZE_2013182010); ++count) {
							{
								if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].forth_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									break;
								}
							}
						}
					}
					//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
					/*-------------------------------------------------------------------------------------------------------*/
					/////////////////////////////////////////////////////////////////////////
					{
						bool iscloze = true;
						for (int count = 0; (count < 5) && (j + count != BOARDSIZE_2013182010); ++count) {
							{
								if (count == 4) iscloze = false;
								if (count == 0)
								{
									b_st_chek_garo[i][j].fifth_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
								{
									b_st_chek_garo[i][j].fifth_ct++; //가로쳌 플플
								}
								if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 흰돌이라면
								{
									b_st_chek_garo[i][j].lastclose = true;
									break;
								}
							}
						}
						if (iscloze) b_st_chek_garo[i][j].lastclose = true;
					}
					//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
					/*-------------------------------------------------------------------------------------------------------*/
				}
				//////////////////////////<가로 쳌크>////////////////////////////////////////////////////////////////////////

				//////////////////////////<세로 쳌크>////////////////////////////////////////////////////////////////////////
				{
					{
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							bool iscloze = true;
							for (int count = 0; (count < 5) && (i - count != -1); ++count)
							{
								if (count == 4) iscloze = false;
								if (count == 0)
								{
									b_st_chek_sero[i][j].first_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].first_ct++; //가로쳌 플플
									}
									if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										b_st_chek_sero[i][j].firstclose = true;
										break;
									}
								}
							}
							if (iscloze) b_st_chek_sero[i][j].firstclose = true;
						}
						//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							for (int count = 0; (count < 4) && (i - count != -1); ++count) {
								if (count == 0)
								{
									b_st_chek_sero[i][j].secnd_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].secnd_ct++; //가로쳌 플플
									}
									if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
							for (int count = 1; (count <= 1) && (i + count != BOARDSIZE_2013182010); ++count) {
								{
									if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].secnd_ct++; //가로쳌 플플
									}
									if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
						}
						//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							for (int count = 0; (count < 3) && (i - count != -1); ++count) {
								if (count == 0)
								{
									b_st_chek_sero[i][j].third_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].third_ct++; //가로쳌 플플
									}
									if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
							for (int count = 1; (count <= 2) && (i + count != BOARDSIZE_2013182010); ++count) {
								{
									if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].third_ct++; //가로쳌 플플
									}
									if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
						}
						//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							for (int count = 0; (count < 2) && (i - count != -1); ++count) {
								if (count == 0)
								{
									b_st_chek_sero[i][j].forth_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].forth_ct++; //가로쳌 플플
									}
									if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
							for (int count = 1; (count <= 3) && (i + count != BOARDSIZE_2013182010); ++count) {
								{
									if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].forth_ct++; //가로쳌 플플
									}
									if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
						}
						//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							bool iscloze = true;
							for (int count = 0; (count < 5) && (i + count != BOARDSIZE_2013182010); ++count) {
								{
									if (count == 4) iscloze = false;
									if (count == 0)
									{
										b_st_chek_sero[i][j].fifth_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 깜장돌이라면
									{
										b_st_chek_sero[i][j].fifth_ct++; //가로쳌 플플
									}
									if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 흰돌이라면
									{
										b_st_chek_sero[i][j].lastclose = true;
										break;
									}
								}
							}
							if (iscloze) b_st_chek_sero[i][j].lastclose = true;
						}
						//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
					}
				}
				//////////////////////////<세로 쳌크>////////////////////////////////////////////////////////////////////////

				//////////////////////////<대각↘ 쳌크>////////////////////////////////////////////////////////////////////////
				{
					{
						{
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								bool iscloze = true;
								for (int count = 0; (count < 5) && (i - count != -1) && (j - count != -1); ++count)
								{
									if (count == 4) iscloze = false;
									if (count == 0)
									{
										b_st_chek_de_l[i][j].first_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].first_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											b_st_chek_de_l[i][j].firstclose = true;
											break;
										}
									}
								}
								if (iscloze)b_st_chek_de_l[i][j].firstclose = true;
							}
							//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 4) && (i - count != -1) && (j - count != -1); ++count) {
									if (count == 0)
									{
										b_st_chek_de_l[i][j].secnd_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].secnd_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 1) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
									{
										if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].secnd_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 3) && (i - count != -1) && (j - count != -1); ++count) {
									if (count == 0)
									{
										b_st_chek_de_l[i][j].third_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].third_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 2) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
									{
										if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].third_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 2) && (i - count != -1) && (j - count != -1); ++count) {
									if (count == 0)
									{
										b_st_chek_de_l[i][j].forth_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].forth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 3) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
									{
										if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].forth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								bool iscloze = true;
								for (int count = 0; (count < 5) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
									{
										if (count == 4) iscloze = false;
										if (count == 0)
										{
											b_st_chek_de_l[i][j].fifth_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_l[i][j].fifth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											b_st_chek_de_l[i][j].lastclose = true;
											break;
										}
									}
								}
								if (iscloze)b_st_chek_de_l[i][j].lastclose = true;
							}
							//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
						}
					}
				}
				//////////////////////////<대각↘ 쳌크>////////////////////////////////////////////////////////////////////////


				//////////////////////////<대각↙ 쳌크>////////////////////////////////////////////////////////////////////////
				{
					{
						{
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								bool iscloze = true;
								for (int count = 0; (count < 5) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count)
								{
									if (count == 4) iscloze = false;
									if (count == 0)
									{
										b_st_chek_de_r[i][j].first_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].first_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											b_st_chek_de_r[i][j].firstclose = true;
											break;
										}
									}
								}
								if (iscloze)b_st_chek_de_r[i][j].firstclose = true;
							}
							//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 4) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count) {
									if (count == 0)
									{
										b_st_chek_de_r[i][j].secnd_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].secnd_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 1) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
									{
										if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].secnd_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 3) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count) {
									if (count == 0)
									{
										b_st_chek_de_r[i][j].third_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].third_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 2) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
									{
										if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].third_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 2) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count) {
									if (count == 0)
									{
										b_st_chek_de_r[i][j].forth_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].forth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 3) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
									{
										if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].forth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								bool iscloze = true;
								for (int count = 0; (count < 5) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
									{
										if (count == 4) iscloze = false;
										if (count == 0)
										{
											b_st_chek_de_r[i][j].fifth_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 깜장돌이라면
										{
											b_st_chek_de_r[i][j].fifth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 흰돌이라면
										{
											b_st_chek_de_r[i][j].lastclose = true;
											break;
										}
									}
								}
								if (iscloze)b_st_chek_de_r[i][j].lastclose = true;
							}
							//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
						}
					}
				}
				//////////////////////////<대각↙ 쳌크>////////////////////////////////////////////////////////////////////////





			}
			/////////////////////////////////<검정돌 쳌크>/////////////////////////////////////////////////////////////////////////////////////////////////



			//////////////////////////////////<하안돌 쳌크>////////////////////////////////////////////////////////////////////////////////////////////////				
			{
				{
					//////////////////////////<가로 쳌크>////////////////////////////////////////////////////////////////////////
					{
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							bool iscloze = true;
							for (int count = 0; (count < 5) && (j - count != -1); ++count) {
								if (count == 4) iscloze = false;
								if (count == 0)
								{
									w_st_chek_garo[i][j].first_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].first_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										w_st_chek_garo[i][j].firstclose = true;
										break;
									}
								}
							}
							if (iscloze)w_st_chek_garo[i][j].firstclose = true;
						}
						//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							for (int count = 0; (count < 4) && (j - count != -1); ++count) {
								if (count == 0)
								{
									w_st_chek_garo[i][j].secnd_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].secnd_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
							for (int count = 1; (count <= 1) && (j + count != BOARDSIZE_2013182010); ++count) {
								{
									if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].secnd_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
						}
						//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							for (int count = 0; (count < 3) && (j - count != -1); ++count) {
								if (count == 0)
								{
									w_st_chek_garo[i][j].third_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].third_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
							for (int count = 1; (count <= 2) && (j + count != BOARDSIZE_2013182010); ++count) {
								{
									if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].third_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
						}
						//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							for (int count = 0; (count < 2) && (j - count != -1); ++count) {
								if (count == 0)
								{
									w_st_chek_garo[i][j].forth_ct++; // 컴은돌 카운터++
								} // 카운트카 0이라면 
								else
								{
									if (board_2013182010[i][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].forth_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j - count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
							for (int count = 1; (count <= 3) && (j + count != BOARDSIZE_2013182010); ++count) {
								{
									if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].forth_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										break;
									}
								}
							}
						}
						//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
						/////////////////////////////////////////////////////////////////////////
						{
							bool iscloze = true;
							for (int count = 0; (count < 5) && (j + count != BOARDSIZE_2013182010); ++count) {
								{
									if (count == 4) iscloze = false;
									if (count == 0)
									{
										w_st_chek_garo[i][j].fifth_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									if (board_2013182010[i][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
									{
										w_st_chek_garo[i][j].fifth_ct++; //가로쳌 플플
									}
									if (board_2013182010[i][j + count] == BLACK_2013182010) // 만약 흰돌이라면
									{
										w_st_chek_garo[i][j].lastclose = true;
										break;
									}
								}
							}
							if (iscloze)w_st_chek_garo[i][j].lastclose = true;
						}
						//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
						/*-------------------------------------------------------------------------------------------------------*/
					}
					//////////////////////////<가로 쳌크>////////////////////////////////////////////////////////////////////////

					//////////////////////////<세로 쳌크>////////////////////////////////////////////////////////////////////////
					{
						{
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								bool iscloze = true;
								for (int count = 0; (count < 5) && (i - count != -1); ++count)
								{

									if (count == 4) iscloze = false;
									if (count == 0)
									{
										w_st_chek_sero[i][j].first_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].first_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											w_st_chek_sero[i][j].firstclose = true;
											break;
										}
									}
								}
								if (iscloze)w_st_chek_sero[i][j].firstclose = true;
							}
							//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 4) && (i - count != -1); ++count) {
									if (count == 0)
									{
										w_st_chek_sero[i][j].secnd_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].secnd_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 1) && (i + count != BOARDSIZE_2013182010); ++count) {
									{
										if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].secnd_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 3) && (i - count != -1); ++count) {
									if (count == 0)
									{
										w_st_chek_sero[i][j].third_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].third_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 2) && (i + count != BOARDSIZE_2013182010); ++count) {
									{
										if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].third_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								for (int count = 0; (count < 2) && (i - count != -1); ++count) {
									if (count == 0)
									{
										w_st_chek_sero[i][j].forth_ct++; // 컴은돌 카운터++
									} // 카운트카 0이라면 
									else
									{
										if (board_2013182010[i - count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].forth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i - count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
								for (int count = 1; (count <= 3) && (i + count != BOARDSIZE_2013182010); ++count) {
									{
										if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].forth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											break;
										}
									}
								}
							}
							//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
							/////////////////////////////////////////////////////////////////////////
							{
								bool iscloze = true;
								for (int count = 0; (count < 5) && (i + count != BOARDSIZE_2013182010); ++count) {
									{
										if (count == 4) iscloze = false;
										if (count == 0)
										{
											w_st_chek_sero[i][j].fifth_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										if (board_2013182010[i + count][j] == WHITE_2013182010) // 만약 깜장돌이라면
										{
											w_st_chek_sero[i][j].fifth_ct++; //가로쳌 플플
										}
										if (board_2013182010[i + count][j] == BLACK_2013182010) // 만약 흰돌이라면
										{
											w_st_chek_sero[i][j].lastclose = true;
											break;
										}
									}
								}
								if (iscloze)	w_st_chek_sero[i][j].lastclose = true;
							}
							//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
							/*-------------------------------------------------------------------------------------------------------*/
						}
					}
					//////////////////////////<세로 쳌크>////////////////////////////////////////////////////////////////////////

					//////////////////////////<대각↘ 쳌크>////////////////////////////////////////////////////////////////////////
					{
						{
							{
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									bool iscloze = true;
									for (int count = 0; (count < 5) && (i - count != -1) && (j - count != -1); ++count)
									{
										if (count == 4) iscloze = false;
										if (count == 0)
										{
											w_st_chek_de_l[i][j].first_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].first_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												w_st_chek_de_l[i][j].firstclose = true;
												break;
											}
										}
									}
									if (iscloze)w_st_chek_de_l[i][j].firstclose = true;
								}
								//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									for (int count = 0; (count < 4) && (i - count != -1) && (j - count != -1); ++count) {
										if (count == 0)
										{
											w_st_chek_de_l[i][j].secnd_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].secnd_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
									for (int count = 1; (count <= 1) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
										{
											if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].secnd_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
								}
								//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									for (int count = 0; (count < 3) && (i - count != -1) && (j - count != -1); ++count) {
										if (count == 0)
										{
											w_st_chek_de_l[i][j].third_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].third_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
									for (int count = 1; (count <= 2) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
										{
											if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].third_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
								}
								//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									for (int count = 0; (count < 2) && (i - count != -1) && (j - count != -1); ++count) {
										if (count == 0)
										{
											w_st_chek_de_l[i][j].forth_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].forth_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
									for (int count = 1; (count <= 3) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
										{
											if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].forth_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
								}
								//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									bool iscloze = true;
									for (int count = 0; (count < 5) && (i + count != BOARDSIZE_2013182010) && (j + count != BOARDSIZE_2013182010); ++count) {
										{
											if (count == 4) iscloze = false;
											if (count == 0)
											{
												w_st_chek_de_l[i][j].fifth_ct++; // 컴은돌 카운터++
											} // 카운트카 0이라면 
											if (board_2013182010[i + count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_l[i][j].fifth_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												w_st_chek_de_l[i][j].lastclose = true;
												break;
											}
										}
									}
									if (iscloze)w_st_chek_de_l[i][j].lastclose = true;
								}
								//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
							}
						}
					}
					//////////////////////////<대각↘ 쳌크>////////////////////////////////////////////////////////////////////////


					//////////////////////////<대각↙ 쳌크>////////////////////////////////////////////////////////////////////////
					{
						{
							{
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									bool iscloze = true;
									for (int count = 0; (count < 5) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count)
									{
										if (count == 4) iscloze = false;
										if (count == 0)
										{
											w_st_chek_de_r[i][j].first_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].first_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												w_st_chek_de_r[i][j].firstclose = true;
												break;
											}
										}
									}
									if (iscloze)w_st_chek_de_r[i][j].firstclose = true;
								}
								//////< 이렇게 체크를 하여보자 0000X >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									for (int count = 0; (count < 4) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count) {
										if (count == 0)
										{
											w_st_chek_de_r[i][j].secnd_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].secnd_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
									for (int count = 1; (count <= 1) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
										{
											if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].secnd_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
								}
								//////< 이렇게 체크를 하여보자 000X0 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									for (int count = 0; (count < 3) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count) {
										if (count == 0)
										{
											w_st_chek_de_r[i][j].third_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].third_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
									for (int count = 1; (count <= 2) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
										{
											if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].third_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
								}
								//////< 이렇게 체크를 하여보자 00X00 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									for (int count = 0; (count < 2) && (i - count != -1) && (j + count != BOARDSIZE_2013182010); ++count) {
										if (count == 0)
										{
											w_st_chek_de_r[i][j].forth_ct++; // 컴은돌 카운터++
										} // 카운트카 0이라면 
										else
										{
											if (board_2013182010[i - count][j + count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].forth_ct++; //가로쳌 플플
											}
											if (board_2013182010[i - count][j + count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
									for (int count = 1; (count <= 3) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
										{
											if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].forth_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												break;
											}
										}
									}
								}
								//////< 이렇게 체크를 하여보자 0X000 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
								/////////////////////////////////////////////////////////////////////////
								{
									bool iscloze = true;
									for (int count = 0; (count < 5) && (i + count != BOARDSIZE_2013182010) && (j - count != -1); ++count) {
										{
											if (count == 4) iscloze = false;
											if (count == 0)
											{
												w_st_chek_de_r[i][j].fifth_ct++; // 컴은돌 카운터++
											} // 카운트카 0이라면 
											if (board_2013182010[i + count][j - count] == WHITE_2013182010) // 만약 깜장돌이라면
											{
												w_st_chek_de_r[i][j].fifth_ct++; //가로쳌 플플
											}
											if (board_2013182010[i + count][j - count] == BLACK_2013182010) // 만약 흰돌이라면
											{
												w_st_chek_de_r[i][j].lastclose = true;
												break;
											}
										}
									}
									if (iscloze)w_st_chek_de_r[i][j].lastclose = true;
								}
								//////< 이렇게 체크를 하여보자 X0000 >//////////////////////////////////////
								/*-------------------------------------------------------------------------------------------------------*/
							}
						}
					}
					//////////////////////////<대각↙ 쳌크>////////////////////////////////////////////////////////////////////////
				}
			}
			//////////////////////////////////<하얀돌 쳌크>//////////////////////////////////////////////////////////////////////////////////////////////





			////////////////////////////////////////////////////////////////////////////////////////////////////////////

		}
	}
	/*-------------------------------------------------------------------------------------------------------------------------------*/

	for (int i = 0; i < BOARDSIZE_2013182010; ++i) {
		for (int j = 0; j < BOARDSIZE_2013182010; ++j) {

			//////////////////////////////////<각 칸의 맥스치를 찾는다>//////////////////////////////////////////////////////////////////////////////////
			{

				/*------------------------------------------------------------------------------------------------------------------------------------------*/
				/////////////////////////////////<검정돌 맥스 쳌크>/////////////////////////////////////////////////////////////////////////////////////////////////
				{
					{
						{
							if (b_st_chek_garo[i][j].mx_ct <= b_st_chek_garo[i][j].first_ct)
								b_st_chek_garo[i][j].mx_ct = b_st_chek_garo[i][j].first_ct;
							if (b_st_chek_garo[i][j].mx_ct <= b_st_chek_garo[i][j].secnd_ct)
								b_st_chek_garo[i][j].mx_ct = b_st_chek_garo[i][j].secnd_ct;
							if (b_st_chek_garo[i][j].mx_ct <= b_st_chek_garo[i][j].third_ct)
								b_st_chek_garo[i][j].mx_ct = b_st_chek_garo[i][j].third_ct;
							if (b_st_chek_garo[i][j].mx_ct <= b_st_chek_garo[i][j].forth_ct)
								b_st_chek_garo[i][j].mx_ct = b_st_chek_garo[i][j].forth_ct;
							if (b_st_chek_garo[i][j].mx_ct <= b_st_chek_garo[i][j].fifth_ct)
								b_st_chek_garo[i][j].mx_ct = b_st_chek_garo[i][j].fifth_ct;
						}

						{
							if (b_st_chek_sero[i][j].mx_ct <= b_st_chek_sero[i][j].first_ct)
								b_st_chek_sero[i][j].mx_ct = b_st_chek_sero[i][j].first_ct;
							if (b_st_chek_sero[i][j].mx_ct <= b_st_chek_sero[i][j].secnd_ct)
								b_st_chek_sero[i][j].mx_ct = b_st_chek_sero[i][j].secnd_ct;
							if (b_st_chek_sero[i][j].mx_ct <= b_st_chek_sero[i][j].third_ct)
								b_st_chek_sero[i][j].mx_ct = b_st_chek_sero[i][j].third_ct;
							if (b_st_chek_sero[i][j].mx_ct <= b_st_chek_sero[i][j].forth_ct)
								b_st_chek_sero[i][j].mx_ct = b_st_chek_sero[i][j].forth_ct;
							if (b_st_chek_sero[i][j].mx_ct <= b_st_chek_sero[i][j].fifth_ct)
								b_st_chek_sero[i][j].mx_ct = b_st_chek_sero[i][j].fifth_ct;
						}

						{
							if (b_st_chek_de_l[i][j].mx_ct <= b_st_chek_de_l[i][j].first_ct)
								b_st_chek_de_l[i][j].mx_ct = b_st_chek_de_l[i][j].first_ct;
							if (b_st_chek_de_l[i][j].mx_ct <= b_st_chek_de_l[i][j].secnd_ct)
								b_st_chek_de_l[i][j].mx_ct = b_st_chek_de_l[i][j].secnd_ct;
							if (b_st_chek_de_l[i][j].mx_ct <= b_st_chek_de_l[i][j].third_ct)
								b_st_chek_de_l[i][j].mx_ct = b_st_chek_de_l[i][j].third_ct;
							if (b_st_chek_de_l[i][j].mx_ct <= b_st_chek_de_l[i][j].forth_ct)
								b_st_chek_de_l[i][j].mx_ct = b_st_chek_de_l[i][j].forth_ct;
							if (b_st_chek_de_l[i][j].mx_ct <= b_st_chek_de_l[i][j].fifth_ct)
								b_st_chek_de_l[i][j].mx_ct = b_st_chek_de_l[i][j].fifth_ct;
						}

						{
							if (b_st_chek_de_r[i][j].mx_ct <= b_st_chek_de_r[i][j].first_ct)
								b_st_chek_de_r[i][j].mx_ct = b_st_chek_de_r[i][j].first_ct;
							if (b_st_chek_de_r[i][j].mx_ct <= b_st_chek_de_r[i][j].secnd_ct)
								b_st_chek_de_r[i][j].mx_ct = b_st_chek_de_r[i][j].secnd_ct;
							if (b_st_chek_de_r[i][j].mx_ct <= b_st_chek_de_r[i][j].third_ct)
								b_st_chek_de_r[i][j].mx_ct = b_st_chek_de_r[i][j].third_ct;
							if (b_st_chek_de_r[i][j].mx_ct <= b_st_chek_de_r[i][j].forth_ct)
								b_st_chek_de_r[i][j].mx_ct = b_st_chek_de_r[i][j].forth_ct;
							if (b_st_chek_de_r[i][j].mx_ct <= b_st_chek_de_r[i][j].fifth_ct)
								b_st_chek_de_r[i][j].mx_ct = b_st_chek_de_r[i][j].fifth_ct;
						}
					}
				}
				/////////////////////////////////<검정돌 맥스 쳌크>/////////////////////////////////////////////////////////////////////////////////////////////////



				//////////////////////////////////<하얀돌 맥스 쳌크>//////////////////////////////////////////////////////////////////////////////////////////////
				{
					{
						if (w_st_chek_garo[i][j].mx_ct <= w_st_chek_garo[i][j].first_ct)
							w_st_chek_garo[i][j].mx_ct = w_st_chek_garo[i][j].first_ct;
						if (w_st_chek_garo[i][j].mx_ct <= w_st_chek_garo[i][j].secnd_ct)
							w_st_chek_garo[i][j].mx_ct = w_st_chek_garo[i][j].secnd_ct;
						if (w_st_chek_garo[i][j].mx_ct <= w_st_chek_garo[i][j].third_ct)
							w_st_chek_garo[i][j].mx_ct = w_st_chek_garo[i][j].third_ct;
						if (w_st_chek_garo[i][j].mx_ct <= w_st_chek_garo[i][j].forth_ct)
							w_st_chek_garo[i][j].mx_ct = w_st_chek_garo[i][j].forth_ct;
						if (w_st_chek_garo[i][j].mx_ct <= w_st_chek_garo[i][j].fifth_ct)
							w_st_chek_garo[i][j].mx_ct = w_st_chek_garo[i][j].fifth_ct;
					}

					{
						if (w_st_chek_sero[i][j].mx_ct <= w_st_chek_sero[i][j].first_ct)
							w_st_chek_sero[i][j].mx_ct = w_st_chek_sero[i][j].first_ct;
						if (w_st_chek_sero[i][j].mx_ct <= w_st_chek_sero[i][j].secnd_ct)
							w_st_chek_sero[i][j].mx_ct = w_st_chek_sero[i][j].secnd_ct;
						if (w_st_chek_sero[i][j].mx_ct <= w_st_chek_sero[i][j].third_ct)
							w_st_chek_sero[i][j].mx_ct = w_st_chek_sero[i][j].third_ct;
						if (w_st_chek_sero[i][j].mx_ct <= w_st_chek_sero[i][j].forth_ct)
							w_st_chek_sero[i][j].mx_ct = w_st_chek_sero[i][j].forth_ct;
						if (w_st_chek_sero[i][j].mx_ct <= w_st_chek_sero[i][j].fifth_ct)
							w_st_chek_sero[i][j].mx_ct = w_st_chek_sero[i][j].fifth_ct;
					}

					{
						if (w_st_chek_de_l[i][j].mx_ct <= w_st_chek_de_l[i][j].first_ct)
							w_st_chek_de_l[i][j].mx_ct = w_st_chek_de_l[i][j].first_ct;
						if (w_st_chek_de_l[i][j].mx_ct <= w_st_chek_de_l[i][j].secnd_ct)
							w_st_chek_de_l[i][j].mx_ct = w_st_chek_de_l[i][j].secnd_ct;
						if (w_st_chek_de_l[i][j].mx_ct <= w_st_chek_de_l[i][j].third_ct)
							w_st_chek_de_l[i][j].mx_ct = w_st_chek_de_l[i][j].third_ct;
						if (w_st_chek_de_l[i][j].mx_ct <= w_st_chek_de_l[i][j].forth_ct)
							w_st_chek_de_l[i][j].mx_ct = w_st_chek_de_l[i][j].forth_ct;
						if (w_st_chek_de_l[i][j].mx_ct <= w_st_chek_de_l[i][j].fifth_ct)
							w_st_chek_de_l[i][j].mx_ct = w_st_chek_de_l[i][j].fifth_ct;
					}

					{
						if (w_st_chek_de_r[i][j].mx_ct <= w_st_chek_de_r[i][j].first_ct)
							w_st_chek_de_r[i][j].mx_ct = w_st_chek_de_r[i][j].first_ct;
						if (w_st_chek_de_r[i][j].mx_ct <= w_st_chek_de_r[i][j].secnd_ct)
							w_st_chek_de_r[i][j].mx_ct = w_st_chek_de_r[i][j].secnd_ct;
						if (w_st_chek_de_r[i][j].mx_ct <= w_st_chek_de_r[i][j].third_ct)
							w_st_chek_de_r[i][j].mx_ct = w_st_chek_de_r[i][j].third_ct;
						if (w_st_chek_de_r[i][j].mx_ct <= w_st_chek_de_r[i][j].forth_ct)
							w_st_chek_de_r[i][j].mx_ct = w_st_chek_de_r[i][j].forth_ct;
						if (w_st_chek_de_r[i][j].mx_ct <= w_st_chek_de_r[i][j].fifth_ct)
							w_st_chek_de_r[i][j].mx_ct = w_st_chek_de_r[i][j].fifth_ct;
					}
				}
				//////////////////////////////////<하얀돌 맥스 쳌크>//////////////////////////////////////////////////////////////////////////////////////////////
				/*------------------------------------------------------------------------------------------------------------------------------------------*/

			}
			//////////////////////////////////<각 칸의 맥스치를 찾는다>//////////////////////////////////////////////////////////////////////////////////


		}

	}



	for (int i = 0; i < BOARDSIZE_2013182010; ++i)
	{
		for (int j = 0; j < BOARDSIZE_2013182010; ++j)
		{
			/*---------------------------------------------------------------------------------------------------------------*/
			white_attk_board_2013182010[i][j] += w_st_chek_garo[i][j].first_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_garo[i][j].secnd_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_garo[i][j].third_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_garo[i][j].forth_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_garo[i][j].fifth_ct;

			white_attk_board_2013182010[i][j] += w_st_chek_sero[i][j].first_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_sero[i][j].secnd_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_sero[i][j].third_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_sero[i][j].forth_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_sero[i][j].fifth_ct;

			white_attk_board_2013182010[i][j] += w_st_chek_de_l[i][j].first_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_l[i][j].secnd_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_l[i][j].third_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_l[i][j].forth_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_l[i][j].fifth_ct;

			white_attk_board_2013182010[i][j] += w_st_chek_de_r[i][j].first_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_r[i][j].secnd_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_r[i][j].third_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_r[i][j].forth_ct;
			white_attk_board_2013182010[i][j] += w_st_chek_de_r[i][j].fifth_ct;

			white_deff_board_2013182010[i][j] += b_st_chek_garo[i][j].first_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_garo[i][j].secnd_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_garo[i][j].third_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_garo[i][j].forth_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_garo[i][j].fifth_ct;

			white_deff_board_2013182010[i][j] += b_st_chek_sero[i][j].first_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_sero[i][j].secnd_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_sero[i][j].third_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_sero[i][j].forth_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_sero[i][j].fifth_ct;

			white_deff_board_2013182010[i][j] += b_st_chek_de_l[i][j].first_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_l[i][j].secnd_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_l[i][j].third_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_l[i][j].forth_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_l[i][j].fifth_ct;

			white_deff_board_2013182010[i][j] += b_st_chek_de_r[i][j].first_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_r[i][j].secnd_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_r[i][j].third_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_r[i][j].forth_ct;
			white_deff_board_2013182010[i][j] += b_st_chek_de_r[i][j].fifth_ct;
			/*---------------------------------------------------------------------------------------------------------------*/

			/////////////////////////////방어동작///////////////////////////////////////////////
			if (
				(b_st_chek_garo[i][j].secnd_ct == 4 && b_st_chek_garo[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_sero[i][j].secnd_ct == 4 && b_st_chek_sero[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_l[i][j].secnd_ct == 4 && b_st_chek_de_l[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_r[i][j].secnd_ct == 4 && b_st_chek_de_r[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}


			if (
				(b_st_chek_garo[i][j].secnd_ct == 4 && b_st_chek_garo[i][j].firstclose == false && b_st_chek_garo[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_sero[i][j].secnd_ct == 4 && b_st_chek_sero[i][j].firstclose == false && b_st_chek_sero[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_l[i][j].secnd_ct == 4 && b_st_chek_de_l[i][j].firstclose == false && b_st_chek_de_l[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_r[i][j].secnd_ct == 4 && b_st_chek_de_r[i][j].firstclose == false && b_st_chek_de_r[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}



			if (
				(b_st_chek_garo[i][j].third_ct == 4)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(b_st_chek_sero[i][j].third_ct == 4)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(b_st_chek_de_l[i][j].third_ct == 4)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(b_st_chek_de_r[i][j].third_ct == 4)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}




			if (
				(b_st_chek_garo[i][j].forth_ct == 4 && b_st_chek_garo[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_sero[i][j].forth_ct == 4 && b_st_chek_sero[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_l[i][j].forth_ct == 4 && b_st_chek_de_l[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_r[i][j].forth_ct == 4 && b_st_chek_de_r[i][j].lastclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}



			if (
				(b_st_chek_garo[i][j].forth_ct == 4 && b_st_chek_garo[i][j].lastclose == false && b_st_chek_garo[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_sero[i][j].forth_ct == 4 && b_st_chek_sero[i][j].lastclose == false && b_st_chek_sero[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_l[i][j].forth_ct == 4 && b_st_chek_de_l[i][j].lastclose == false && b_st_chek_de_l[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_r[i][j].forth_ct == 4 && b_st_chek_de_r[i][j].lastclose == false && b_st_chek_de_r[i][j].firstclose == false)
				) {
				white_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}




			if (
				(b_st_chek_garo[i][j].mx_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}
			if (
				(b_st_chek_sero[i][j].mx_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}
			if (
				(b_st_chek_de_l[i][j].mx_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}
			if (
				(b_st_chek_de_r[i][j].mx_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}

			if (
				(b_st_chek_garo[i][j].secnd_ct >= 5) || (b_st_chek_garo[i][j].third_ct >= 5) || (b_st_chek_garo[i][j].forth_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}
			if (
				(b_st_chek_sero[i][j].secnd_ct >= 5) || (b_st_chek_sero[i][j].third_ct >= 5) || (b_st_chek_sero[i][j].forth_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}
			if (
				(b_st_chek_de_l[i][j].secnd_ct >= 5) || (b_st_chek_de_l[i][j].third_ct >= 5) || (b_st_chek_de_l[i][j].forth_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}
			if (
				(b_st_chek_de_r[i][j].secnd_ct >= 5) || (b_st_chek_de_r[i][j].third_ct >= 5) || (b_st_chek_de_r[i][j].forth_ct >= 5)
				) {
				white_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}
			/////////////////////////////공격동작///////////////////////////////////////////////
			if (
				(w_st_chek_garo[i][j].secnd_ct == 4 && w_st_chek_garo[i][j].firstclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_sero[i][j].secnd_ct == 4 && w_st_chek_sero[i][j].firstclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_l[i][j].secnd_ct == 4 && w_st_chek_de_l[i][j].firstclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_r[i][j].secnd_ct == 4 && w_st_chek_de_r[i][j].firstclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}



			if (
				(w_st_chek_garo[i][j].third_ct == 4)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(w_st_chek_sero[i][j].secnd_ct == 4)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(w_st_chek_de_l[i][j].secnd_ct == 4)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(w_st_chek_de_r[i][j].secnd_ct == 4)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}


			if (
				(w_st_chek_garo[i][j].forth_ct == 4 && w_st_chek_garo[i][j].lastclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_sero[i][j].forth_ct == 4 && w_st_chek_sero[i][j].lastclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_l[i][j].forth_ct == 4 && w_st_chek_de_l[i][j].lastclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_r[i][j].forth_ct == 4 && w_st_chek_de_r[i][j].lastclose == false)
				) {
				white_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}

			if (
				(w_st_chek_garo[i][j].mx_ct >= 5)
				) {
				white_attk_board_2013182010[i][j] += RISK_WIN_2013182010;
			}
			if (
				(w_st_chek_sero[i][j].mx_ct >= 5)
				) {
				white_attk_board_2013182010[i][j] += RISK_WIN_2013182010;
			}
			if (
				(w_st_chek_de_l[i][j].mx_ct >= 5)
				) {
				white_attk_board_2013182010[i][j] += RISK_WIN_2013182010;
			}
			if (
				(w_st_chek_de_r[i][j].mx_ct >= 5)
				) {
				white_attk_board_2013182010[i][j] += RISK_WIN_2013182010;
			}
			////////////////////////////////////////////////////////////////////////////////
			if (
				b_st_chek_garo[i][j].firstclose == true && b_st_chek_garo[i][j].lastclose == true &&
				b_st_chek_sero[i][j].firstclose == true && b_st_chek_sero[i][j].lastclose == true &&
				b_st_chek_de_l[i][j].firstclose == true && b_st_chek_de_l[i][j].lastclose == true &&
				b_st_chek_de_r[i][j].firstclose == true && b_st_chek_de_r[i][j].lastclose == true
				) {
				white_deff_board_2013182010[i][j] = RISK_SAFE_2013182010;
			}

			if (board_2013182010[i][j] != 0) {
				white_attk_board_2013182010[i][j] = RISK_SAFE_2013182010;
				white_deff_board_2013182010[i][j] = RISK_SAFE_2013182010;
			}

			/*-------------------------------------------------------------------------------------------------------------*/
			black_attk_board_2013182010[i][j] += b_st_chek_garo[i][j].first_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_garo[i][j].secnd_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_garo[i][j].third_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_garo[i][j].forth_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_garo[i][j].fifth_ct;

			black_attk_board_2013182010[i][j] += b_st_chek_sero[i][j].first_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_sero[i][j].secnd_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_sero[i][j].third_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_sero[i][j].forth_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_sero[i][j].fifth_ct;

			black_attk_board_2013182010[i][j] += b_st_chek_de_l[i][j].first_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_l[i][j].secnd_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_l[i][j].third_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_l[i][j].forth_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_l[i][j].fifth_ct;

			black_attk_board_2013182010[i][j] += b_st_chek_de_r[i][j].first_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_r[i][j].secnd_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_r[i][j].third_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_r[i][j].forth_ct;
			black_attk_board_2013182010[i][j] += b_st_chek_de_r[i][j].fifth_ct;

			black_deff_board_2013182010[i][j] += w_st_chek_garo[i][j].first_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_garo[i][j].secnd_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_garo[i][j].third_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_garo[i][j].forth_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_garo[i][j].fifth_ct;

			black_deff_board_2013182010[i][j] += w_st_chek_sero[i][j].first_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_sero[i][j].secnd_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_sero[i][j].third_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_sero[i][j].forth_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_sero[i][j].fifth_ct;

			black_deff_board_2013182010[i][j] += w_st_chek_de_l[i][j].first_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_l[i][j].secnd_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_l[i][j].third_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_l[i][j].forth_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_l[i][j].fifth_ct;

			black_deff_board_2013182010[i][j] += w_st_chek_de_r[i][j].first_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_r[i][j].secnd_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_r[i][j].third_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_r[i][j].forth_ct;
			black_deff_board_2013182010[i][j] += w_st_chek_de_r[i][j].fifth_ct;

			/*-------------------------------------------------------------------------------------------------------------*/

			/////////////////////////////방어동작///////////////////////////////////////////////
			if (
				(w_st_chek_garo[i][j].secnd_ct == 4 && w_st_chek_garo[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_sero[i][j].secnd_ct == 4 && w_st_chek_sero[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_l[i][j].secnd_ct == 4 && w_st_chek_de_l[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_r[i][j].secnd_ct == 4 && w_st_chek_de_r[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}




			if (
				(w_st_chek_garo[i][j].third_ct == 4)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(w_st_chek_sero[i][j].third_ct == 4)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(w_st_chek_de_l[i][j].third_ct == 4)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(w_st_chek_de_r[i][j].third_ct == 4)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}

			if (
				(w_st_chek_garo[i][j].secnd_ct == 4 && w_st_chek_garo[i][j].firstclose == false && w_st_chek_garo[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_sero[i][j].secnd_ct == 4 && w_st_chek_sero[i][j].firstclose == false && w_st_chek_sero[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_l[i][j].secnd_ct == 4 && w_st_chek_de_l[i][j].firstclose == false && w_st_chek_de_l[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_r[i][j].secnd_ct == 4 && w_st_chek_de_r[i][j].firstclose == false && w_st_chek_de_r[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}



			if (
				(w_st_chek_garo[i][j].forth_ct == 4 && w_st_chek_garo[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_sero[i][j].forth_ct == 4 && w_st_chek_sero[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_l[i][j].forth_ct == 4 && w_st_chek_de_l[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_r[i][j].forth_ct == 4 && w_st_chek_de_r[i][j].lastclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}


			if (
				(w_st_chek_garo[i][j].forth_ct == 4 && w_st_chek_garo[i][j].lastclose == false && w_st_chek_garo[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_sero[i][j].forth_ct == 4 && w_st_chek_sero[i][j].lastclose == false && w_st_chek_sero[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_l[i][j].forth_ct == 4 && w_st_chek_de_l[i][j].lastclose == false && w_st_chek_de_l[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(w_st_chek_de_r[i][j].forth_ct == 4 && w_st_chek_de_r[i][j].lastclose == false && w_st_chek_de_r[i][j].firstclose == false)
				) {
				black_deff_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}



			if (
				(w_st_chek_garo[i][j].mx_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}
			if (
				(w_st_chek_sero[i][j].mx_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}
			if (
				(w_st_chek_de_l[i][j].mx_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}
			if (
				(w_st_chek_de_r[i][j].mx_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010;
			}

			if (
				(w_st_chek_garo[i][j].secnd_ct >= 5) || (w_st_chek_garo[i][j].third_ct >= 5) || (w_st_chek_garo[i][j].forth_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}

			if (
				(w_st_chek_sero[i][j].secnd_ct >= 5) || (w_st_chek_sero[i][j].third_ct >= 5) || (w_st_chek_sero[i][j].forth_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}

			if (
				(w_st_chek_de_l[i][j].secnd_ct >= 5) || (w_st_chek_de_l[i][j].third_ct >= 5) || (w_st_chek_de_l[i][j].forth_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}

			if (
				(w_st_chek_de_r[i][j].secnd_ct >= 5) || (w_st_chek_de_r[i][j].third_ct >= 5) || (w_st_chek_de_r[i][j].forth_ct >= 5)
				) {
				black_deff_board_2013182010[i][j] += RISK_HAZARD_2013182010 * 10;
			}
			/////////////////////////////공격동작///////////////////////////////////////////////
			if (
				(b_st_chek_garo[i][j].secnd_ct == 4 && b_st_chek_garo[i][j].firstclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_sero[i][j].secnd_ct == 4 && b_st_chek_sero[i][j].firstclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_l[i][j].secnd_ct == 4 && b_st_chek_de_l[i][j].firstclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_r[i][j].secnd_ct == 4 && b_st_chek_de_r[i][j].firstclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}



			if (
				(b_st_chek_garo[i][j].third_ct == 4)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010*2;
			}
			if (
				(b_st_chek_sero[i][j].third_ct == 4)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(b_st_chek_de_l[i][j].third_ct == 4)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}
			if (
				(b_st_chek_de_r[i][j].third_ct == 4)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 2;
			}




			if (
				(b_st_chek_garo[i][j].forth_ct == 4 && b_st_chek_garo[i][j].lastclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_sero[i][j].forth_ct == 4 && b_st_chek_sero[i][j].lastclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_l[i][j].forth_ct == 4 && b_st_chek_de_l[i][j].lastclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}
			if (
				(b_st_chek_de_r[i][j].forth_ct == 4 && b_st_chek_de_r[i][j].lastclose == false)
				) {
				black_attk_board_2013182010[i][j] += RISK_CAN_DANGER_2013182010 * 3;
			}

			if (
				(b_st_chek_garo[i][j].mx_ct >= 5)
				) {
				black_attk_board_2013182010[i][j] += RISK_WIN_2013182010 * 5;
			}

			if (
				(b_st_chek_sero[i][j].mx_ct >= 5)
				) {
				black_attk_board_2013182010[i][j] += RISK_WIN_2013182010 * 5;
			}

			if (
				(b_st_chek_de_l[i][j].mx_ct >= 5)
				) {
				black_attk_board_2013182010[i][j] += RISK_WIN_2013182010 * 5;
			}

			if (
				(b_st_chek_de_r[i][j].mx_ct >= 5)
				) {
				black_attk_board_2013182010[i][j] += RISK_WIN_2013182010 * 5;
			}
			////////////////////////////////////////////////////////////////////////////////

			/*------------------------------------------------------------------------------------------------------------*/





			if (
				b_st_chek_garo[i][j].firstclose == true && b_st_chek_garo[i][j].lastclose == true &&
				b_st_chek_sero[i][j].firstclose == true && b_st_chek_sero[i][j].lastclose == true &&
				b_st_chek_de_l[i][j].firstclose == true && b_st_chek_de_l[i][j].lastclose == true &&
				b_st_chek_de_r[i][j].firstclose == true && b_st_chek_de_r[i][j].lastclose == true
				) {
				black_attk_board_2013182010[i][j] = RISK_SAFE_2013182010;
			}

			/*------------------------------------------------------------------------------------------------------------*/

			if (
				(b_st_chek_garo[i][j].mx_ct == 3 && b_st_chek_sero[i][j].mx_ct == 3) ||
				(b_st_chek_garo[i][j].mx_ct == 3 && b_st_chek_de_l[i][j].mx_ct == 3) ||
				(b_st_chek_garo[i][j].mx_ct == 3 && b_st_chek_de_r[i][j].mx_ct == 3) ||
				(b_st_chek_sero[i][j].mx_ct == 3 && b_st_chek_de_l[i][j].mx_ct == 3) ||
				(b_st_chek_sero[i][j].mx_ct == 3 && b_st_chek_de_r[i][j].mx_ct == 3) ||
				(b_st_chek_de_l[i][j].mx_ct == 3 && b_st_chek_de_r[i][j].mx_ct == 3) ||

				(b_st_chek_garo[i][j].mx_ct == 4 && b_st_chek_sero[i][j].mx_ct == 4) ||
				(b_st_chek_garo[i][j].mx_ct == 4 && b_st_chek_de_l[i][j].mx_ct == 4) ||
				(b_st_chek_garo[i][j].mx_ct == 4 && b_st_chek_de_r[i][j].mx_ct == 4) ||
				(b_st_chek_sero[i][j].mx_ct == 4 && b_st_chek_de_l[i][j].mx_ct == 4) ||
				(b_st_chek_sero[i][j].mx_ct == 4 && b_st_chek_de_r[i][j].mx_ct == 4) ||
				(b_st_chek_de_l[i][j].mx_ct == 4 && b_st_chek_de_r[i][j].mx_ct == 4)

				&& (
					b_st_chek_garo[i][j].mx_ct != 5 &&
					b_st_chek_sero[i][j].mx_ct != 5 &&
					b_st_chek_de_l[i][j].mx_ct != 5 &&
					b_st_chek_de_r[i][j].mx_ct != 5
					)
				&& (
					w_st_chek_garo[i][j].mx_ct != 5 &&
					w_st_chek_sero[i][j].mx_ct != 5 &&
					w_st_chek_de_l[i][j].mx_ct != 5 &&
					w_st_chek_de_r[i][j].mx_ct != 5
					)
				) {
				black_attk_board_2013182010[i][j] = RISK_TABOO_2013182010;
				black_deff_board_2013182010[i][j] = RISK_TABOO_2013182010;
			}

			if (board_2013182010[i][j] != 0) {
				black_attk_board_2013182010[i][j] = RISK_SAFE_2013182010;
				black_deff_board_2013182010[i][j] = RISK_SAFE_2013182010;
			}

		}
	}

	switch (st_color) {
	case BLACK_2013182010:

	{


		for (int i = 0; i < BOARDSIZE_2013182010; ++i) {
			for (int j = 0; j < BOARDSIZE_2013182010; ++j) {
				if (max_attk_2013182010 <= black_attk_board_2013182010[i][j])
					max_attk_2013182010 = black_attk_board_2013182010[i][j];
				if (max_deff_2013182010 <= black_deff_board_2013182010[i][j])
					max_deff_2013182010 = black_deff_board_2013182010[i][j];
			}
		}

		if (max_attk_2013182010 <= max_deff_2013182010)
			better_phase_2013182010 = Better_State_2013182010::defense_2013182010;
		else
			better_phase_2013182010 = Better_State_2013182010::attack_2013182010;




	}


	break;
	case WHITE_2013182010:
	{


		for (int i = 0; i < BOARDSIZE_2013182010; ++i) {
			for (int j = 0; j < BOARDSIZE_2013182010; ++j) {
				if (max_attk_2013182010 <= white_attk_board_2013182010[i][j])
					max_attk_2013182010 = white_attk_board_2013182010[i][j];
				if (max_deff_2013182010 <= white_deff_board_2013182010[i][j])
					max_deff_2013182010 = white_deff_board_2013182010[i][j];
			}
		}

		if (max_attk_2013182010 <= max_deff_2013182010)
			better_phase_2013182010 = Better_State_2013182010::defense_2013182010;
		else
			better_phase_2013182010 = Better_State_2013182010::attack_2013182010;




	}
	break;
	}
}

void ATTKWITE_2013182010김병진(int *x, int *y) {
	board_2013182010_calc(WHITE_2013182010);
	insert(WHITE_2013182010);
	*x = posx_2013182010;
	*y = posy_2013182010;
	turn_2013182010++;
}
void DEFFWITE_2013182010김병진(int x, int y) {
	board_2013182010_calc(BLACK_2013182010);
	board_2013182010[y][x] = BLACK_2013182010;
	turn_2013182010++;
}
void ATTKBLAK_2013182010김병진(int *x, int *y) {
	board_2013182010_calc(BLACK_2013182010);
	insert(BLACK_2013182010);
	*x = posx_2013182010;
	*y = posy_2013182010;
	turn_2013182010++;
}
void DEFFBLAK_2013182010김병진(int x, int y) {
	board_2013182010_calc(WHITE_2013182010);
	board_2013182010[y][x] = WHITE_2013182010;
	turn_2013182010++;
}